import Head from 'next/head';
import React, { useState, useReducer } from 'react'
import { CopyBlock, dracula } from 'react-code-blocks';
import Heading from '../components/heading';
import Todo from '../components/Todo';

export const ACTIONS = {
    INCREMENT: 'increment',
    DECREMENT: 'decrement',
    ADD_TODO: 'add-todo',
    TOGGLE_TODO: 'toggle-todo',
    DELETE_TODO: 'delete-todo'
}

function reducer (state, action){
    switch(action.type){
        case ACTIONS.INCREMENT:
            return { count: state.count + 1 }
        case ACTIONS.DECREMENT:
            return { count: state.count - 1 }
        default:
            return state
    }
}

function reducer2 (todos, action){
    switch(action.type){
        case ACTIONS.ADD_TODO :
            return [...todos, newTodo(action.payload.name)]
        case ACTIONS.TOGGLE_TODO : 
            return todos.map((todo) => {
                if(todo.id === action.payload.id){
                    return {
                        ...todo, complete: !todo.complete
                    }
                }
                return todo
            })
        case ACTIONS.DELETE_TODO: 
            return todos.filter(todo => todo.id !== action.payload.id)
        default:
            return todos
            
    }
}

function newTodo(name){
    return {
        id: Date.now(),
        name: name,
        complete: false
    }
}

const UseReducer = () => {

    const [state, dispatch] = useReducer(reducer, { count: 0 })

    function increment(){
        dispatch({
            type: ACTIONS.INCREMENT
        })
    }

    function decrement(){
        dispatch({
            type: ACTIONS.DECREMENT
        })
    }


    // --------- Second Example
    const [ todos, dispatch2 ] = useReducer(reducer2, []);
    const [ name, setName ] = useState('');

    function handleSubmit(e){
        e.preventDefault();
        dispatch2({
            type: ACTIONS.ADD_TODO,
            payload: {
                name: name
            }
        });
        setName('')
    }


    console.log(todos);



    return (
        <div>
            <Head>
                <title>Use Reducer | React Hooks Collections</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <Heading heading={'Use Reducer'}/>

            <CopyBlock
                text="
                    const [state, dispatch] = useReducer(reducer, { count: 0 })
                    dispatch({
                        type: ACTIONS.INCREMENT
                    })
                "
                language='javascript'
                wrapLines
                theme={dracula}
                codeBlock={true}
            />


            <button onClick={decrement}> - </button>
            <span>{state.count}</span>
            <button onClick={increment}> + </button>


            <Heading heading={'ToDos Example'}/>


            <CopyBlock
                text="
                    const [ todos, dispatch2 ] = useReducer(reducer2, []);
                    dispatch2({
                        type: ACTIONS.ADD_TODO,
                        payload: {
                            name: name
                        }
                    });
                "
                language='javascript'
                wrapLines
                theme={dracula}
                codeBlock={true}
            />

            <form onSubmit={handleSubmit} style={{ marginTop: "30px"}}>
                <input type="text" value={name} onChange={e => setName(e.target.value)} />
            </form>

            {
                todos.map((todo, i) => {
                    return  <Todo key={i} todo={todo} dispatch={dispatch2} />
                })
            }

        </div>
    )
}

export default UseReducer